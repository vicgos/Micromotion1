import de.voidplus.myo.*;

Myo myo;
ArrayList<ArrayList<Integer>> sensors;

PrintWriter output;
PrintWriter output2;


void keyPressed() {
  output.flush();  // Writes the remaining data to the file
  output.close();  // Finishes the file
  exit();  // Stops the program
}

void setup() {
  size(800, 400);
  background(255);
  noFill();
  stroke(0);
  output = createWriter("EMG.txt");
  output2 = createWriter("Accelerometer.txt");
  // ...

  myo = new Myo(this, true); // true, with EMG data
  
  sensors = new ArrayList<ArrayList<Integer>>();
  for (int i=0; i<8; i++) {
    sensors.add(new ArrayList<Integer>()); 
  }
}

void draw() {
  background(255);
  // ...
  
  // Drawing:
  synchronized (this) {
    for (int i=0; i<8; i++) {
      if (!sensors.get(i).isEmpty()) {
        beginShape();
        for (int j=0; j<sensors.get(i).size(); j++) {
          vertex(j, sensors.get(i).get(j)+(i*50));
        }
        endShape();
      } 
    }
  }
}

// ----------------------------------------------------------

void myoOnEmgData(Device myo, long timestamp, int[] data) {
  output.println("device: " + myo.getId());
  // int[] data <- 8 values from -128 to 127
  
  // Data:
  synchronized (this) {
    for (int i = 0; i<data.length; i++) {
      sensors.get(i).add((int) map(data[i], -128, 127, 0, 50)); // [-128 - 127]
    }
    while (sensors.get(0).size() > width) {
      for(ArrayList<Integer> sensor : sensors) {
        sensor.remove(0);
      }
    }
  }
}

void myoOnAccelerometerData(Device myo, long timestamp, PVector accelerometer) {
  output2.println("Myio " + myo + " time " + timestamp + "Accelerometer Data" + accelerometer);
}
// ----------------------------------------------------------


void myoOn(Myo.Event event, Device myo, long timestamp) {
  switch(event) {
  case EMG_DATA:
    println("myoOn EMG & Device: "+myo.getId());
    //int[] data <- 8 values from -128 to 127
    int[] data = myo.getEmg();
    for(int i = 0; i<data.length; i++){
      output.println(map(data[i], -128, 127, 0, 50)); // [-128 - 127] 
    }
    break;
  }
}
